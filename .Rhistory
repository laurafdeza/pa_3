geom_line()
vowel_clean %>%
filter(., formant == "f1") %>%
#  group_by(vowel) %>%
ggplot(., aes(percent, hz, color = vowel)) +
geom_point()
vowel_clean %>%
filter(., formant == "f1") %>%
#  group_by(vowel) %>%
ggplot(., aes(percent, hz, color = vowel)) +
geom_point() +
facet_grid(. ~ language)
# Plot both vowel spaces together
vowel_means <- vowels %>%
group_by(vowel, language) %>%
summarize(f1_cent = mean(f1_cent), f2_cent = mean(f2_cent)) %>%
ungroup() %>%
mutate(order = case_when(vowel == "i" ~ 1, vowel == "a" ~ 2, TRUE ~ 3),
vowel = forcats::fct_reorder2(vowel, vowel, order)) %>%
arrange(order)
vowels %>%
mutate(vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(x = f2_cent, y = f1_cent, color = language, label = vowel)) +
geom_text(size = 3.5, alpha = 0.6, show.legend = F) +
geom_path(data = vowel_means, aes(group = language, lty = language),
color = "grey") +
geom_text(data = vowel_means, show.legend = F, size = 7) +
scale_y_reverse() +
scale_x_reverse() +
scale_color_brewer(palette = "Set1") +
labs(title = "Vowel space comparison",
subtitle = "Spectral centroids of English/Spanish cardinal vowels",
y = "F1 (Hz)", x = "F2 (Hz)") +
theme_minimal(base_size = 16) +
theme(plot.title = element_text(hjust=0.5))
library(forcats)
vowel_clean %>%
# filter(., formant == "f1") %>%
#  group_by(vowel) %>%
mutate(vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, hz, color = vowel)) +
geom_point() +
geom_path(data = vowel_means, aes(group = language, lty = language),
color = "grey") +
facet_grid(. ~ formant)
vowel_clean <- vowel_f_clean %>%
separate(.,
col = mean_f,
into = c("formant", "percent"),
sep = "_",
remove = TRUE)
vowel_clean %>%
# filter(., formant == "f1") %>%
#  group_by(vowel) %>%
mutate(vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, hz, color = vowel)) +
geom_point() +
geom_path(data = vowel_means, aes(group = language, lty = language),
color = "grey") +
facet_grid(. ~ formant)
vowel_clean
vowel_clean %>%
# filter(., formant == "f1") %>%
#  group_by(vowel) %>%
mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, hz, color = vowel)) +
geom_point() +
geom_path(data = vowel_means, aes(group = language, lty = language),
color = "grey") +
facet_grid(. ~ formant)
vowel_clean %>%
# filter(., formant == "f1") %>%
#  group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, hz, color = vowel)) +
geom_point() +
geom_path(data = vowel_means, aes(group = language, lty = language),
color = "grey") +
facet_grid(. ~ formant)
# Plot trajectory length in the F1/F2 vowel space -----------------------------
vowel_f_means <- vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = (f1_20 + f2_20)/2,
f_35 = (f1_35 + f2_35)/2,
f_50 = (f1_50 + f2_50)/2,
f_65 = (f1_65 + f2_65)/2,
f_80 = (f1_80 + f2_80)/2) %>%
pivot_longer(c(f_20:f_80), names_to = "mean_f", values_to = "hz") %>%
ungroup()
vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = (f1_20 + f2_20)/2,
f_35 = (f1_35 + f2_35)/2,
f_50 = (f1_50 + f2_50)/2,
f_65 = (f1_65 + f2_65)/2,
f_80 = (f1_80 + f2_80)/2)
vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = rowMeans(f1_20, f2_20))
vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = rowMeans(vowels[c(f1_20, f2_20)])
vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = rowMeans(vowels[c(f1_20, f2_20)]))
vowels
vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = rowMeans(vowels[c(f1_20, f2_20)]))
vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = rowMeans(vowels[c(f1_20, f2_20),]))
vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = rowMeans(vowels[c("f1_20", "f2_20")]))
vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = rowMeans(vowels[c("f1_20", "f2_20")], na.rm = TRUE))
vowels %>%
group_by(language, vowel) %>%
summarize(vowel_f_mean$f_20 = rowMeans(vowels[c("f1_20", "f2_20")], na.rm = TRUE)
vowel_f_mean$f_20 = rowMeans(vowels[c("f1_20", "f2_20")], na.rm = TRUE)
vowel_f_means <- 0
vowel_f_mean$f_20 = rowMeans(vowels[c("f1_20", "f2_20")], na.rm = TRUE)
vowel_f_means$f_20 = rowMeans(vowels[c("f1_20", "f2_20")], na.rm = TRUE)
vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = (mean(f1_20) + mean(f2_20))/2)
vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = (mean(f1_20) + mean(f2_20))/2,
f_35 = (mean(f1_35) + mean(f2_35))/2,
f_50 = (mean(f1_50) + mean(f2_50))/2,
f_65 = (mean(f1_65) + mean(f2_65))/2,
f_80 = (mean(f1_80) + mean(f2_80))/2)
# Plot trajectory length in the F1/F2 vowel space -----------------------------
vowel_f_means <- vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = (mean(f1_20) + mean(f2_20))/2,
f_35 = (mean(f1_35) + mean(f2_35))/2,
f_50 = (mean(f1_50) + mean(f2_50))/2,
f_65 = (mean(f1_65) + mean(f2_65))/2,
f_80 = (mean(f1_80) + mean(f2_80))/2) %>%
pivot_longer(c(f_20:f_80), names_to = "mean_f", values_to = "hz") %>%
ungroup()
vowel_f_means
# remove mn from values and create columns formant and %
vowel_f_clean <- data.frame(lapply(vowel_f_means, function(x) {gsub("f_", "", x)}))
vowel_f_clean
# Plot trajectory length in the F1/F2 vowel space -----------------------------
vowel_f_means <- vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = (mean(f1_20) + mean(f2_20))/2,
f_35 = (mean(f1_35) + mean(f2_35))/2,
f_50 = (mean(f1_50) + mean(f2_50))/2,
f_65 = (mean(f1_65) + mean(f2_65))/2,
f_80 = (mean(f1_80) + mean(f2_80))/2) %>%
pivot_longer(c(f_20:f_80), names_to = "percent", values_to = "mean_hz") %>%
ungroup()
# remove mn from values and create columns formant and %
vowel_f_clean <- data.frame(lapply(vowel_f_means, function(x) {gsub("f_", "", x)}))
vowel_f_clean
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = vowel)) +
geom_point()
# remove mn from values and create columns formant and %
vowel_clean <- data.frame(lapply(vowel_f_means, function(x) {gsub("f_", "", x)}))
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = vowel)) +
geom_point()
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = vowel)) +
geom_point() +
facet_grid(. ~ language)
vowel_clean$mean_hz <- as.numeric(vowel_clean$mean_hz)
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = vowel)) +
geom_point() +
facet_grid(. ~ language)
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_clean$mean_hz
view(vowel_f_means)
view(vowel_clean)
# remove mn from values and create columns formant and %
vowel_clean <- data.frame(lapply(vowel_f_means, function(x) {gsub("f_", "", x)}))
vowel_clean
vowel_clean$mean_hz <- as.numeric(vowel_clean$mean_hz)
vowel_clean
# remove mn from values and create columns formant and %
vowel_clean <- data.frame(lapply(vowel_f_means, function(x) {gsub("f_", "", x)}))
vowel_clean$mean_hz <- as.float(vowel_clean$mean_hz)
# remove mn from values and create columns formant and %
vowel_clean <- data.frame(lapply(vowel_f_means, function(x) {gsub("f_", "", x)}))
vowel_clean$mean_hz <- as.integer(vowel_clean$mean_hz)
vowel_clean
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
geom_point() +
geom_path() +
facet_grid(. ~ vowel)
# remove mn from values and create columns formant and %
vowel_clean <- data.frame(lapply(vowel_f_means, function(x) {gsub("f_", "", x)}))
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1100,100)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_clean$mean_hz <- as.integer(vowel_clean$mean_hz)
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1100,100)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,110,10)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,30,5)) +
geom_point() +
facet_grid(. ~ vowel)
# Plot trajectory length in the F1/F2 vowel space -----------------------------
vowel_f_means <- vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = (mean(f1_20) + mean(f2_20))/2,
f_35 = (mean(f1_35) + mean(f2_35))/2,
f_50 = (mean(f1_50) + mean(f2_50))/2,
f_65 = (mean(f1_65) + mean(f2_65))/2,
f_80 = (mean(f1_80) + mean(f2_80))/2) %>%
pivot_longer(c(f_20:f_80), names_to = "percent", values_to = "mean_hz") %>%
ungroup()
# remove mn from values and create columns formant and %
vowel_clean <- data.frame(lapply(vowel_f_means, function(x) {gsub("f_", "", x)}))
class(vowel_clean$mean_hz)
vowel_clean$mean_hz <- as.numeric(as.character(vowel_clean$mean_hz))
vowel_clean$mean_hz
vowel_clean %>%
group_by(vowel) %>%
# mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,30,5)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_clean %>%
group_by(vowel) %>%
mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,30,5)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "u", "a", "i")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,30,5)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1100,100)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1600,200)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_f1_means <- vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = mean(f1_20),
f_35 = mean(f1_35),
f_50 = mean(f1_50),
f_65 = mean(f1_65),
f_80 = mean(f1_80)) %>%
pivot_longer(c(f_20:f_80), names_to = "percent", values_to = "mean_hz") %>%
ungroup()
# remove mn from values and create columns formant and %
vowel_f1_clean <- data.frame(lapply(vowel_f1_means, function(x) {gsub("f1_", "", x)}))
vowel_f1_clean$mean_hz <- as.numeric(as.character(vowel_f1_clean$mean_hz))
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1600,200)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_f1_clean$mean_hz
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,800,100)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
facet_grid(. ~ vowel)
# remove mn from values and create columns formant and %
vowel_f1_clean <- data.frame(lapply(vowel_f1_means, function(x) {gsub("f_", "", x)}))
vowel_f1_clean$mean_hz <- as.numeric(as.character(vowel_f1_clean$mean_hz))
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_f2_means <- vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = mean(f2_20),
f_35 = mean(f2_35),
f_50 = mean(f2_50),
f_65 = mean(f2_65),
f_80 = mean(f2_80)) %>%
pivot_longer(c(f_20:f_80), names_to = "percent", values_to = "mean_hz") %>%
ungroup()
# remove mn from values and create columns formant and %
vowel_f2_clean <- data.frame(lapply(vowel_f2_means, function(x) {gsub("f_", "", x)}))
vowel_f2_clean$mean_hz <- as.numeric(as.character(vowel_f2_clean$mean_hz))
vowel_f2_clean$mean_hz
vowel_f2_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(800,2800,200)) +
geom_point() +
facet_grid(. ~ vowel)
vowel_f1_means <- vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = mean(f1_20),
f_35 = mean(f1_35),
f_50 = mean(f1_50),
f_65 = mean(f1_65),
f_80 = mean(f1_80)) %>%
pivot_longer(c(f_20:f_80), names_to = "percent", values_to = "mean_hz") %>%
ungroup()
# remove mn from values and create columns formant and %
vowel_f1_clean <- data.frame(lapply(vowel_f1_means, function(x) {gsub("f_", "", x)}))
vowel_f1_clean$mean_hz <- as.numeric(as.character(vowel_f1_clean$mean_hz))
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
geom_path +
facet_grid(. ~ vowel)
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
geom_path() +
facet_grid(. ~ vowel)
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
geom_path(mean_hz) +
facet_grid(. ~ vowel)
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
geom_path() +
facet_grid(. ~ vowel)
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
geom_line() +
facet_grid(. ~ vowel)
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
geom_step() +
facet_grid(. ~ vowel)
?labs
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
facet_grid(. ~ vowel) +
xlab("Percent into trajectory length") +
ylab("Mean Hz")
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
facet_grid(. ~ vowel) +
ggtitle("Trajectory length in vowel space") +
theme(plot.title = element_text(hjust=0.5)) +
xlab("Percent into trajectory length") +
ylab("Mean Hz") +
scale_color_discrete(name = "Language", labels = c("English", "Spanish")) +
### f2
vowel_f2_means <- vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = mean(f2_20),
f_35 = mean(f2_35),
f_50 = mean(f2_50),
f_65 = mean(f2_65),
f_80 = mean(f2_80)) %>%
pivot_longer(c(f_20:f_80), names_to = "percent", values_to = "mean_hz") %>%
ungroup()
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
facet_grid(. ~ vowel) +
ggtitle("Trajectory length in vowel space") +
theme(plot.title = element_text(hjust=0.5)) +
xlab("Percent into trajectory length") +
ylab("Mean Hz") +
scale_color_discrete(name = "Language", labels = c("English", "Spanish"))
vowel_f1_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(0,1000,100)) +
geom_point() +
facet_grid(. ~ vowel) +
ggtitle("Trajectory length in F1 vowel space") +
theme(plot.title = element_text(hjust=0.5)) +
xlab("Percent into trajectory length") +
ylab("Mean Hz") +
scale_color_discrete(name = "Language", labels = c("English", "Spanish"))
vowel_f2_means <- vowels %>%
group_by(language, vowel) %>%
summarize(f_20 = mean(f2_20),
f_35 = mean(f2_35),
f_50 = mean(f2_50),
f_65 = mean(f2_65),
f_80 = mean(f2_80)) %>%
pivot_longer(c(f_20:f_80), names_to = "percent", values_to = "mean_hz") %>%
ungroup()
# remove mn from values and create columns formant and %
vowel_f2_clean <- data.frame(lapply(vowel_f2_means, function(x) {gsub("f_", "", x)}))
vowel_f2_clean$mean_hz <- as.numeric(as.character(vowel_f2_clean$mean_hz))
vowel_f2_clean %>%
mutate(., vowel = forcats::fct_relevel(vowel, "i", "a", "u")) %>%
group_by(vowel) %>%
ggplot(., aes(percent, mean_hz, color = language)) +
scale_y_continuous(breaks=seq(800,2800,200)) +
geom_point() +
facet_grid(. ~ vowel) +
ggtitle("Trajectory length in F2 vowel space") +
theme(plot.title = element_text(hjust=0.5)) +
xlab("Percent into trajectory length") +
ylab("Mean Hz") +
scale_color_discrete(name = "Language", labels = c("English", "Spanish"))
